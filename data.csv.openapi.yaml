info:
    version: 1.0.0
    title: 'GitRows API Interface'
    contact:
        name: jan-glx
        url: 'https://github.com/jan-glx'
    description: "\n\n---\n\nCreated with [GitRows](https://gitrows.com)"
    x-gitrows-repository: 'https://github.com/jan-glx/perturb-seq-data-list/blob/master/data.csv'
    x-gitrows-api-path: '@github/jan-glx/perturb-seq-data-list/data.csv'
components:
    schemas:
        Error:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                documentation:
                    type: object
                    properties:
                        description:
                            type: string
                        url:
                            type: string
        Record:
            type: object
            properties:
                "":
                    type: string
                'Target genes':
                    type: integer
                    format: int32
                'Guides per gene':
                    type: string
                'Control guides':
                    type: integer
                    format: int32
                'Total guides':
                    type: integer
                    format: int32
                'Number of cells':
                    type: string
                'Assigned cells':
                    type: string
                'Assigned cells per gene':
                    type: integer
                    format: int32
                Perturbation:
                    type: string
                'Library targets':
                    type: string
openapi: 3.0.0
servers:
    -
        url: 'https://api.gitrows.com'
paths:
    /@github/jan-glx/perturb-seq-data-list/data.csv:
        get:
            description: 'Return a list of records'
            summary: ""
            operationId: listRecords
            parameters:
                -
                    in: query
                    name: ""
                    schema:
                        type: string
                    description: "Select records that match value for ``.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: 'Target genes'
                    schema:
                        oneOf:
                            -
                                type: integer
                            -
                                type: string
                    description: "Select records that match value for `Target genes`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Target genes=gt:10`:\n\n`not:` equals not; `lt:` less than; `lte:` less than or equal; `gt:` greater than; `gte:` greater than or equal"
                    allowReserved: true
                -
                    in: query
                    name: 'Guides per gene'
                    schema:
                        type: string
                    description: "Select records that match value for `Guides per gene`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Guides per gene=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: 'Control guides'
                    schema:
                        oneOf:
                            -
                                type: integer
                            -
                                type: string
                    description: "Select records that match value for `Control guides`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Control guides=gt:10`:\n\n`not:` equals not; `lt:` less than; `lte:` less than or equal; `gt:` greater than; `gte:` greater than or equal"
                    allowReserved: true
                -
                    in: query
                    name: 'Total guides'
                    schema:
                        oneOf:
                            -
                                type: integer
                            -
                                type: string
                    description: "Select records that match value for `Total guides`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Total guides=gt:10`:\n\n`not:` equals not; `lt:` less than; `lte:` less than or equal; `gt:` greater than; `gte:` greater than or equal"
                    allowReserved: true
                -
                    in: query
                    name: 'Number of cells'
                    schema:
                        type: string
                    description: "Select records that match value for `Number of cells`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Number of cells=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: 'Assigned cells'
                    schema:
                        type: string
                    description: "Select records that match value for `Assigned cells`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Assigned cells=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: 'Assigned cells per gene'
                    schema:
                        oneOf:
                            -
                                type: integer
                            -
                                type: string
                    description: "Select records that match value for `Assigned cells per gene`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Assigned cells per gene=gt:10`:\n\n`not:` equals not; `lt:` less than; `lte:` less than or equal; `gt:` greater than; `gte:` greater than or equal"
                    allowReserved: true
                -
                    in: query
                    name: Perturbation
                    schema:
                        type: string
                    description: "Select records that match value for `Perturbation`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Perturbation=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: 'Library targets'
                    schema:
                        type: string
                    description: "Select records that match value for `Library targets`.\n\nYou can optionally use the following comparison operators as prefixes to your values, e.g. `Library targets=*:foo`:\n\n`starts:` text starts with, alias: `^:`; `contains:` contains text, alias: `*:`; `ends:` text ends with, alias: `$:`"
                    allowReserved: true
                -
                    in: query
                    name: $count
                    schema:
                        type: string
                    description: 'Counts the records in the data set, use `*` or any `columnName` as parameter'
                    allowReserved: true
                -
                    in: query
                    name: $avg
                    schema:
                        type: string
                    description: 'Calculates the average of all numeric values in `columnName`'
                    allowReserved: true
                -
                    in: query
                    name: $sum
                    schema:
                        type: string
                    description: 'Calculates the sum of all numeric values in `columnName`'
                    allowReserved: true
                -
                    in: query
                    name: $min
                    schema:
                        type: string
                    description: 'Returns the smallest of all numeric values in `columnName`'
                    allowReserved: true
                -
                    in: query
                    name: $max
                    schema:
                        type: string
                    description: 'Returns the largest of all numeric values in `columnName`'
                    allowReserved: true
            responses:
                '200':
                    description: 'A list of records with any optionally provided filters applied.'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Record'
                default:
                    description: 'Error Payload'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
